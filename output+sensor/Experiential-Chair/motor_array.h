// Motor class for animation

#ifndef motor_array_h
#define motor_array_h

#include <Arduino.h>

class MotorSequence {
    public:
      uint8_t sample(int sequencenumber, unsigned long offset);
    private:
       uint8_t sequence[4][100] = {
            // Positive short sequence ~ 3 seconds
            // 2.5 second even buld up to max strength
            // 0.5 second build down to 0
            // two seconds blank excess
           {3, 6,  9,  12,  15,  18,  21,  24,  27,  30,
            33, 36,  39,  42,  45,  48,  51,  54,  57,  60,
            63, 66,  69,  72,  75,  78,  81,  84,  87,  90,
            93, 96,  99,  102,  105,  108,  111,  114,  117,  120,
            123, 126,  129,  132,  135,  138,  141,  145,  148,  153,
            150, 135,  120,  105,  90,  75,  60,  45,  30,  15,

            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0},

            // Negative short sequence ~ 2 seconds
            // 2 seconds of alternating .25 second pulses
                //of 75%, 0%, 100%, 0% strength
            // 3 seconds of blank excess
           {120, 120,  120,  120,  120,  0,  0,  0,  0,  0,
            153, 153,  153,  153,  153,  0,  0,  0,  0,  0,
            120, 120,  120,  120,  120,  0,  0,  0,  0,  0,
            153, 153,  153,  153,  153,  0,  0,  0,  0,  0,

            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0},


            // Positive long sequence ~ 5 seconds
           {10, 15,  20,  25,  30,  35,  40,  45,  50,  55,
            60, 65,  70,  75,  80,  85,  90,  95,  100,  100,
            120, 120,  120,  115,  115,  115,  110,  110,  110,  115,
            115, 115,  120,  120,  120,  115,  115,  115,  110,  110,
            110, 115,  115, 120,  120,  120,  115,  115,  115,  110,
            110, 110,  115,  115,  115,  120,  120,  120,  115,  115,
            115, 110,  110,  110,  115,  115,  115,  120,  120,  120,
            115, 115,  115,  110,  110,  110,  120,  120,  120,  115,
            115, 115,  110,  110,  110,  105,  105,  105,  100,  95,
            90, 85,  80, 70,  60,  50,  40,  30,  20,  10},

            // Negative long sequence ~ 4 seconds
           {153, 153,  0,  0,  153,  153,  0,  0,  153,  153,
            0, 0,  153,  153,  0,  0,  153,  153,  0,  0,
            153, 153,  0,  0,  153,  153,  0,  0,  153,  153,
            0, 0,  153,  153,  0,  0,  153,  153,  0,  0,
            153, 153,  0,  0,  153,  153,  0,  0,  153,  153,
            0, 0,  153,  153,  0,  0,  153,  153,  0,  0,
            153, 153,  0,  0,  153,  153,  0,  0,  153,  153,
            0, 0,  153,  153,  0,  0,  153,  153,  0,  0,

            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0}
          };
      const int sampleLength = 50;
};

#endif

// blank 100 step sequence (a 5 second sequence when sampleLength = 50 )
// {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
//  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
//  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
//  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
//  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
//  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
//  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
//  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
//  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
//  0, 0,  0,  0,  0,  0,  0,  0,  0,  0}
